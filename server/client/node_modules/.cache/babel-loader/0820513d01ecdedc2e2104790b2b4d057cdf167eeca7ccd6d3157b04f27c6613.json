{"ast":null,"code":"const cartReducer = (state, action) => {\n  if (action.type === \"ADD_TO_CART\") {\n    let {\n      _id,\n      amount,\n      product,\n      description\n    } = action.payload;\n    if (state.cart === null) {\n      return {\n        ...state,\n        cart: []\n      };\n    } else {\n      let exitProduct = state.cart.find(curItem => curItem.id === _id);\n      if (exitProduct) {\n        let updateproduct = state.cart.map(currElem => {\n          if (currElem.id === _id) {\n            // console.log(currElem)\n            let newAmount = currElem.amount + amount;\n            if (newAmount > product.Stock) {\n              newAmount = product.Stock;\n            }\n            // console.log(newAmount)\n\n            return {\n              ...currElem,\n              amount: newAmount\n            };\n          } else {\n            return currElem;\n          }\n        });\n        return {\n          ...state,\n          cart: updateproduct\n        };\n      } else {\n        let cartProduct;\n        cartProduct = {\n          id: _id,\n          amount,\n          description: product.description,\n          name: product.name,\n          image: product.images[0],\n          price: product.price,\n          max: product.Stock\n        };\n        console.log(state, cartProduct);\n        return {\n          ...state,\n          cart: [...state.cart, cartProduct]\n        };\n      }\n    }\n  }\n  if (action.type === \"REMOVE_ITEM\") {\n    // console.log(state.cart, action.payload)\n    let updatedCart = state.cart.filter(currele => currele.id !== action.payload.id);\n    // console.log(updatedCart)\n    return {\n      ...state,\n      cart: updatedCart\n    };\n  }\n  if (action.type === \"CLEAR_CART\") {\n    return {\n      ...state,\n      cart: []\n    };\n  }\n  if (action.type === \"TOTAL_CART_ITEM\") {\n    if (state.cart === null) {\n      return {\n        ...state,\n        total_item: 0\n      };\n    } else {\n      let updatedItemVal = state.cart.reduce((intialVal, currElem) => {\n        let {\n          amount\n        } = currElem;\n        intialVal = intialVal + amount;\n        // intialVal = intialVal + 1;\n        return intialVal;\n      }, 0);\n      return {\n        ...state,\n        total_item: updatedItemVal\n      };\n    }\n  }\n  if (action.type === \"TOTAL_CART_PRICE\") {\n    if (state.cart === null) {\n      return {\n        ...state,\n        total_amount: 0\n      };\n    } else {\n      let subTotalprice = state.cart.reduce((intialVal, currElem) => {\n        let {\n          price,\n          amount\n        } = currElem;\n        intialVal = intialVal + price * amount;\n        return intialVal;\n      }, 0);\n      return {\n        ...state,\n        total_amount: subTotalprice\n      };\n    }\n\n    // let upadted\n  }\n\n  if (action.type === \"SET_INCREASE\") {\n    let updatedProduct = state.cart.map(currElem => {\n      if (currElem.id === action.payload.id) {\n        // console.log(currElem.id, action.payload.id)\n        let Increament = currElem.amount + 1;\n        console.log(currElem);\n        if (Increament > currElem.max) {\n          Increament = currElem.max;\n        }\n        return {\n          ...currElem,\n          amount: Increament\n        };\n      } else {\n        return currElem;\n      }\n    });\n    // console.log(updatedProduct)\n    return {\n      ...state,\n      cart: updatedProduct\n    };\n  }\n  if (action.type === \"SET_DECREASE\") {\n    let updatedProduct = state.cart.map(currElem => {\n      if (currElem.id === action.payload.id) {\n        // console.log(currElem.id, action.payload.id)\n        let Decreament = currElem.amount - 1;\n        console.log(currElem);\n        if (Decreament < 1) {\n          Decreament = 1;\n        }\n        return {\n          ...currElem,\n          amount: Decreament\n        };\n      } else {\n        return currElem;\n      }\n    });\n    // console.log(updatedProduct)\n    return {\n      ...state,\n      cart: updatedProduct\n    };\n  }\n  return state;\n};\nexport default cartReducer;","map":{"version":3,"names":["cartReducer","state","action","type","_id","amount","product","description","payload","cart","exitProduct","find","curItem","id","updateproduct","map","currElem","newAmount","Stock","cartProduct","name","image","images","price","max","console","log","updatedCart","filter","currele","total_item","updatedItemVal","reduce","intialVal","total_amount","subTotalprice","updatedProduct","Increament","Decreament"],"sources":["C:/Users/WindowsChimp/OneDrive/Documents/GitHub/icloudsoft-drone/server/client/src/reducer/cartReducer.js"],"sourcesContent":["const cartReducer = (state, action) => {\n    if (action.type === \"ADD_TO_CART\") {\n        let { _id, amount, product, description } = action.payload;\n\n        if (state.cart === null) {\n\n\n            return {\n                ...state,\n                cart: []\n\n\n            }\n        } else {\n\n\n\n            let exitProduct = state.cart.find(\n                (curItem) => curItem.id === _id);\n            if (exitProduct) {\n\n                let updateproduct = state.cart.map((currElem) => {\n\n                    if (currElem.id === _id) {\n                        // console.log(currElem)\n                        let newAmount = currElem.amount + amount;\n                        if (newAmount > product.Stock) {\n                            newAmount = product.Stock\n                        }\n                        // console.log(newAmount)\n\n                        return {\n                            ...currElem,\n                            amount: newAmount,\n\n                        };\n                    } else {\n                        return currElem\n                    }\n                });\n                return {\n                    ...state,\n\n                    cart: updateproduct\n\n                }\n\n            } else {\n                let cartProduct;\n\n                cartProduct = {\n                    id: _id,\n                    amount,\n                    description: product.description,\n                    name: product.name,\n                    image: product.images[0],\n                    price: product.price,\n                    max: product.Stock\n                };\n                console.log(state, cartProduct);\n                return {\n\n                    ...state,\n\n                    cart: [...state.cart, cartProduct]\n                };\n\n            }\n\n        }\n\n\n\n\n    }\n\n    if (action.type === \"REMOVE_ITEM\") {\n        // console.log(state.cart, action.payload)\n        let updatedCart = state.cart.filter(\n                (currele) => currele.id !== action.payload.id)\n            // console.log(updatedCart)\n        return {\n            ...state,\n            cart: updatedCart\n        }\n    }\n\n\n    if (action.type === \"CLEAR_CART\") {\n\n        return {\n            ...state,\n            cart: [],\n        };\n\n    }\n\n\n    if (action.type === \"TOTAL_CART_ITEM\") {\n        if (state.cart === null) {\n            return {\n                ...state,\n                total_item: 0\n            }\n\n        } else {\n            let updatedItemVal = state.cart.reduce((intialVal, currElem) => {\n                let { amount } = currElem\n                intialVal = intialVal + amount;\n                // intialVal = intialVal + 1;\n                return intialVal\n            }, 0)\n            return {\n                ...state,\n                total_item: updatedItemVal\n            }\n        }\n    }\n\n    if (action.type === \"TOTAL_CART_PRICE\") {\n        if (state.cart === null) {\n            return {\n                ...state,\n                total_amount: 0\n            }\n\n        } else {\n\n            let subTotalprice = state.cart.reduce(\n\n                (intialVal, currElem) => {\n\n                    let { price, amount } = currElem;\n                    intialVal = intialVal + price * amount;\n                    return intialVal\n                }, 0)\n\n            return {\n                ...state,\n                total_amount: subTotalprice\n            }\n\n        }\n\n\n        // let upadted\n    }\n\n\n\n\n\n\n\n    if (action.type === \"SET_INCREASE\") {\n        let updatedProduct = state.cart.map((currElem) => {\n                if (currElem.id === action.payload.id) {\n                    // console.log(currElem.id, action.payload.id)\n                    let Increament = currElem.amount + 1\n                    console.log(currElem)\n                    if (Increament > currElem.max) {\n                        Increament = currElem.max\n                    }\n                    return {\n\n                        ...currElem,\n                        amount: Increament\n                    }\n                } else {\n                    return currElem\n                }\n\n\n            })\n            // console.log(updatedProduct)\n        return {...state, cart: updatedProduct }\n\n    }\n\n    if (action.type === \"SET_DECREASE\") {\n        let updatedProduct = state.cart.map((currElem) => {\n                if (currElem.id === action.payload.id) {\n                    // console.log(currElem.id, action.payload.id)\n                    let Decreament = currElem.amount - 1\n                    console.log(currElem)\n                    if (Decreament < 1) {\n                        Decreament = 1\n                    }\n                    return {\n\n                        ...currElem,\n                        amount: Decreament\n                    }\n                } else {\n                    return currElem\n                }\n\n\n            })\n            // console.log(updatedProduct)\n        return {...state, cart: updatedProduct }\n\n    }\n\n\n\n\n\n    return state;\n\n\n\n};\n\nexport default cartReducer"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}